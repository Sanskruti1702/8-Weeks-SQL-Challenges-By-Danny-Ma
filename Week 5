**Query #1**

    DROP TABLE IF EXISTS cleaned_weekly_sales;

There are no results to be displayed.

---
**Query #2**

    CREATE TEMP TABLE cleaned_weekly_sales AS (
    SELECT
            TO_DATE(week_date, 'DD/MM/YY') AS week_date,
             DATE_PART('week', TO_DATE(week_date, 'DD/MM/YY')) AS week_number,
             DATE_PART('month', TO_DATE(week_date, 'DD/MM/YY')) AS month_number,
             DATE_PART('year', TO_DATE(week_date, 'DD/MM/YY')) AS calendar_year,
             region, 
             platform, 
             segment,
             CASE 
               WHEN RIGHT(segment,1) = '1' THEN 'Young Adults'
      
               WHEN RIGHT(segment,1) = '' THEN 'Middle Aged'
               WHEN RIGHT(segment,1) IN ('3','4') THEN ' Retirees'
               ELSE 'unknown' END AS age_band,
             CASE 
               WHEN LEFT(segment,1) = 'C' THEN 'Couples'
               WHEN LEFT(segment,1) = 'F' THEN 'Families'
               ELSE 'unknown' END AS demographic,
             transactions,
             ROUND((sales::NUMERIC/transactions),2) AS avg_transaction,
             sales
    FROM data_mart.weekly_sales);

There are no results to be displayed.

---
**Query #3**

    SELECT * FROM cleaned_weekly_sales
    LIMIT 10;

| week_date                | week_number | month_number | calendar_year | region | platform | segment | age_band     | demographic | transactions | avg_transaction | sales    |
| ------------------------ | ----------- | ------------ | ------------- | ------ | -------- | ------- | ------------ | ----------- | ------------ | --------------- | -------- |
| 2020-08-31T00:00:00.000Z | 36          | 8            | 2020          | ASIA   | Retail   | C3      |  Retirees    | Couples     | 120631       | 30.31           | 3656163  |
| 2020-08-31T00:00:00.000Z | 36          | 8            | 2020          | ASIA   | Retail   | F1      | Young Adults | Families    | 31574        | 31.56           | 996575   |
| 2020-08-31T00:00:00.000Z | 36          | 8            | 2020          | USA    | Retail   | null    | unknown      | unknown     | 529151       | 31.20           | 16509610 |
| 2020-08-31T00:00:00.000Z | 36          | 8            | 2020          | EUROPE | Retail   | C1      | Young Adults | Couples     | 4517         | 31.42           | 141942   |
| 2020-08-31T00:00:00.000Z | 36          | 8            | 2020          | AFRICA | Retail   | C2      | unknown      | Couples     | 58046        | 30.29           | 1758388  |
| 2020-08-31T00:00:00.000Z | 36          | 8            | 2020          | CANADA | Shopify  | F2      | unknown      | Families    | 1336         | 182.54          | 243878   |
| 2020-08-31T00:00:00.000Z | 36          | 8            | 2020          | AFRICA | Shopify  | F3      |  Retirees    | Families    | 2514         | 206.64          | 519502   |
| 2020-08-31T00:00:00.000Z | 36          | 8            | 2020          | ASIA   | Shopify  | F1      | Young Adults | Families    | 2158         | 172.11          | 371417   |
| 2020-08-31T00:00:00.000Z | 36          | 8            | 2020          | AFRICA | Shopify  | F2      | unknown      | Families    | 318          | 155.84          | 49557    |
| 2020-08-31T00:00:00.000Z | 36          | 8            | 2020          | AFRICA | Retail   | C3      |  Retirees    | Couples     | 111032       | 35.02           | 3888162  |

---
**Query #4**

    SELECT DISTINCT(TO_CHAR(week_date, 'day')) AS week_day 
    FROM cleaned_weekly_sales;

| week_day  |
| --------- |
| monday    |

---
**Query #5**

    WITH week_number_cte AS (
      SELECT GENERATE_SERIES(1,52) AS week_number
    )  
    SELECT DISTINCT week_no.week_number
    FROM week_number_cte AS week_no
    LEFT JOIN cleaned_weekly_sales AS sales
      ON week_no.week_number = sales.week_number
    WHERE sales.week_number IS NULL;

| week_number |
| ----------- |
| 1           |
| 2           |
| 3           |
| 4           |
| 5           |
| 6           |
| 7           |
| 8           |
| 9           |
| 10          |
| 11          |
| 12          |
| 37          |
| 38          |
| 39          |
| 40          |
| 41          |
| 42          |
| 43          |
| 44          |
| 45          |
| 46          |
| 47          |
| 48          |
| 49          |
| 50          |
| 51          |
| 52          |

---
**Query #6**

    SELECT 
      calendar_year, 
      SUM(transactions) AS total_number_of_transactions
    FROM cleaned_weekly_sales
    GROUP BY calendar_year
    ORDER BY calendar_year;

| calendar_year | total_number_of_transactions |
| ------------- | ---------------------------- |
| 2018          | 346406460                    |
| 2019          | 365639285                    |
| 2020          | 375813651                    |

---
**Query #7**

    SELECT 
      month_number, 
      region, 
      SUM(sales) AS total_sales
    FROM cleaned_weekly_sales
    GROUP BY month_number, region
    ORDER BY month_number, region;

| month_number | region        | total_sales |
| ------------ | ------------- | ----------- |
| 3            | AFRICA        | 567767480   |
| 3            | ASIA          | 529770793   |
| 3            | CANADA        | 144634329   |
| 3            | EUROPE        | 35337093    |
| 3            | OCEANIA       | 783282888   |
| 3            | SOUTH AMERICA | 71023109    |
| 3            | USA           | 225353043   |
| 4            | AFRICA        | 1911783504  |
| 4            | ASIA          | 1804628707  |
| 4            | CANADA        | 484552594   |
| 4            | EUROPE        | 127334255   |
| 4            | OCEANIA       | 2599767620  |
| 4            | SOUTH AMERICA | 238451531   |
| 4            | USA           | 759786323   |
| 5            | AFRICA        | 1647244738  |
| 5            | ASIA          | 1526285399  |
| 5            | CANADA        | 412378365   |
| 5            | EUROPE        | 109338389   |
| 5            | OCEANIA       | 2215657304  |
| 5            | SOUTH AMERICA | 201391809   |
| 5            | USA           | 655967121   |
| 6            | AFRICA        | 1767559760  |
| 6            | ASIA          | 1619482889  |
| 6            | CANADA        | 443846698   |
| 6            | EUROPE        | 122813826   |
| 6            | OCEANIA       | 2371884744  |
| 6            | SOUTH AMERICA | 218247455   |
| 6            | USA           | 703878990   |
| 7            | AFRICA        | 1960219710  |
| 7            | ASIA          | 1768844756  |
| 7            | CANADA        | 477134947   |
| 7            | EUROPE        | 136757466   |
| 7            | OCEANIA       | 2563459400  |
| 7            | SOUTH AMERICA | 235582776   |
| 7            | USA           | 760331754   |
| 8            | AFRICA        | 1809596890  |
| 8            | ASIA          | 1663320609  |
| 8            | CANADA        | 447073019   |
| 8            | EUROPE        | 122102995   |
| 8            | OCEANIA       | 2432313652  |
| 8            | SOUTH AMERICA | 221166052   |
| 8            | USA           | 712002790   |
| 9            | AFRICA        | 276320987   |
| 9            | ASIA          | 252836807   |
| 9            | CANADA        | 69067959    |
| 9            | EUROPE        | 18877433    |
| 9            | OCEANIA       | 372465518   |
| 9            | SOUTH AMERICA | 34175583    |
| 9            | USA           | 110532368   |

---
**Query #8**

    SELECT 
      platform, 
      SUM(transactions) AS total_transactions
    FROM cleaned_weekly_sales
    GROUP BY platform;

| platform | total_transactions |
| -------- | ------------------ |
| Shopify  | 5925169            |
| Retail   | 1081934227         |

---
**Query #9**

    WITH monthly_transactions_cte AS (
      SELECT 
        calendar_year, 
        month_number, 
        platform, 
        SUM(sales) AS monthly_sales
      FROM cleaned_weekly_sales
      GROUP BY calendar_year, month_number, platform
    )
    SELECT 
      calendar_year, 
      month_number, 
      ROUND(100 * MAX 
        (CASE 
          WHEN platform = 'Retail' THEN monthly_sales ELSE NULL END) 
        / SUM(monthly_sales),2) AS retail_percentage,
      ROUND(100 * MAX 
        (CASE 
          WHEN platform = 'Shopify' THEN monthly_sales ELSE NULL END)
        / SUM(monthly_sales),2) AS shopify_percentage
    FROM monthly_transactions_cte
    GROUP BY calendar_year, month_number
    ORDER BY calendar_year, month_number;

| calendar_year | month_number | retail_percentage | shopify_percentage |
| ------------- | ------------ | ----------------- | ------------------ |
| 2018          | 3            | 97.92             | 2.08               |
| 2018          | 4            | 97.93             | 2.07               |
| 2018          | 5            | 97.73             | 2.27               |
| 2018          | 6            | 97.76             | 2.24               |
| 2018          | 7            | 97.75             | 2.25               |
| 2018          | 8            | 97.71             | 2.29               |
| 2018          | 9            | 97.68             | 2.32               |
| 2019          | 3            | 97.71             | 2.29               |
| 2019          | 4            | 97.80             | 2.20               |
| 2019          | 5            | 97.52             | 2.48               |
| 2019          | 6            | 97.42             | 2.58               |
| 2019          | 7            | 97.35             | 2.65               |
| 2019          | 8            | 97.21             | 2.79               |
| 2019          | 9            | 97.09             | 2.91               |
| 2020          | 3            | 97.30             | 2.70               |
| 2020          | 4            | 96.96             | 3.04               |
| 2020          | 5            | 96.71             | 3.29               |
| 2020          | 6            | 96.80             | 3.20               |
| 2020          | 7            | 96.67             | 3.33               |
| 2020          | 8            | 96.51             | 3.49               |

---
**Query #10**

    WITH demographic_sales_cte AS (
      SELECT 
        calendar_year, 
        demographic, 
        SUM(sales) AS yearly_sales
      FROM cleaned_weekly_sales
      GROUP BY calendar_year, demographic
    )
    SELECT 
      calendar_year, 
      ROUND(100 * MAX 
        (CASE 
          WHEN demographic = 'Couples' THEN yearly_sales ELSE NULL END)
        / SUM(yearly_sales),2) AS couples_percentage,
      ROUND(100 * MAX 
        (CASE 
          WHEN demographic = 'Families' THEN yearly_sales ELSE NULL END)
        / SUM(yearly_sales),2) AS families_percentage,
      ROUND(100 * MAX 
        (CASE 
          WHEN demographic = 'unknown' THEN yearly_sales ELSE NULL END)
        / SUM(yearly_sales),2) AS unknown_percentage
    FROM demographic_sales_cte
    GROUP BY calendar_year;

| calendar_year | couples_percentage | families_percentage | unknown_percentage |
| ------------- | ------------------ | ------------------- | ------------------ |
| 2019          | 27.28              | 32.47               | 40.25              |
| 2018          | 26.38              | 31.99               | 41.63              |
| 2020          | 28.72              | 32.73               | 38.55              |

---
**Query #11**

    SELECT 
      age_band, 
      demographic, 
      SUM(sales) AS retail_sales,
      ROUND(100 * 
        SUM(sales)::NUMERIC 
        / SUM(SUM(sales)) OVER (),
      1) AS contribution_percentage
    FROM cleaned_weekly_sales
    WHERE platform = 'Retail'
    GROUP BY age_band, demographic
    ORDER BY retail_sales DESC;

| age_band     | demographic | retail_sales | contribution_percentage |
| ------------ | ----------- | ------------ | ----------------------- |
| unknown      | unknown     | 16067285533  | 40.5                    |
|  Retirees    | Families    | 6634686916   | 16.7                    |
|  Retirees    | Couples     | 6370580014   | 16.1                    |
| unknown      | Families    | 4354091554   | 11.0                    |
| Young Adults | Couples     | 2602922797   | 6.6                     |
| unknown      | Couples     | 1854160330   | 4.7                     |
| Young Adults | Families    | 1770889293   | 4.5                     |

---
**Query #12**

    SELECT 
      calendar_year, 
      platform, 
      ROUND(AVG(avg_transaction),0) AS avg_transaction_row, 
      SUM(sales) / sum(transactions) AS avg_transaction_group
    FROM cleaned_weekly_sales
    GROUP BY calendar_year, platform
    ORDER BY calendar_year, platform;

| calendar_year | platform | avg_transaction_row | avg_transaction_group |
| ------------- | -------- | ------------------- | --------------------- |
| 2018          | Retail   | 43                  | 36                    |
| 2018          | Shopify  | 188                 | 192                   |
| 2019          | Retail   | 42                  | 36                    |
| 2019          | Shopify  | 178                 | 183                   |
| 2020          | Retail   | 41                  | 36                    |
| 2020          | Shopify  | 175                 | 179                   |

---
**Query #13**

    SELECT DISTINCT week_number
    FROM cleaned_weekly_sales
    WHERE week_date = '2020-06-15' AND calendar_year = '2020';

| week_number |
| ----------- |
| 25          |

---
**Query #14**

    WITH packaging_sales_cte AS (
      SELECT 
        week_date, 
        week_number, 
        SUM(sales) AS total_sales
      FROM cleaned_weekly_sales
      WHERE (week_number BETWEEN 13 AND 37) 
        AND (calendar_year = 2020)
      GROUP BY week_date, week_number
    )
    , before_after_changes_cte AS (
      SELECT 
        SUM(CASE 
          WHEN week_number BETWEEN 13 AND 24 THEN total_sales END) AS before_packaging_sales,
        SUM(CASE 
          WHEN week_number BETWEEN 25 AND 37 THEN total_sales END) AS after_packaging_sales
      FROM packaging_sales_cte
    )
    SELECT 
      after_packaging_sales - before_packaging_sales AS sales_variance, 
      ROUND(100 * 
        (after_packaging_sales - before_packaging_sales) / before_packaging_sales,2) AS variance_percentage
    FROM before_after_changes_cte;

| sales_variance | variance_percentage |
| -------------- | ------------------- |
| -152325394     | -2.14               |

---
**Query #15**

    WITH changes_cte AS (
      SELECT 
        calendar_year,
        week_number, 
        SUM(sales) AS total_sales
      FROM cleaned_weekly_sales
      WHERE week_number BETWEEN 21 AND 28
      GROUP BY calendar_year, week_number
    )
    , before_after_changes_cte AS (
      SELECT 
        calendar_year,
        SUM(CASE 
          WHEN week_number BETWEEN 13 AND 24 THEN total_sales END) AS before_packaging_sales,
        SUM(CASE 
          WHEN week_number BETWEEN 25 AND 28 THEN total_sales END) AS after_packaging_sales
      FROM changes_cte
      GROUP BY calendar_year
    )
    SELECT 
      calendar_year, 
      after_packaging_sales - before_packaging_sales AS sales_variance, 
      ROUND(100 * 
        (after_packaging_sales - before_packaging_sales) 
        / before_packaging_sales,2) AS variance_percentage
    FROM before_after_changes_cte;

| calendar_year | sales_variance | variance_percentage |
| ------------- | -------------- | ------------------- |
| 2018          | 4102105        | 0.19                |
| 2019          | 2336594        | 0.10                |
| 2020          | -26884188      | -1.15               |

---
**Query #16**

    WITH changes_cte AS (
      SELECT 
        calendar_year, 
        week_number, 
        SUM(sales) AS total_sales
      FROM cleaned_weekly_sales
      WHERE week_number BETWEEN 13 AND 37
      GROUP BY calendar_year, week_number
    )
    , before_after_changes_cte AS (
      SELECT 
        calendar_year,
        SUM(CASE 
          WHEN week_number BETWEEN 13 AND 24 THEN total_sales END) AS before_packaging_sales,
        SUM(CASE 
          WHEN week_number BETWEEN 25 AND 37 THEN total_sales END) AS after_packaging_sales
      FROM changes_cte
      GROUP BY calendar_year
    )
    SELECT 
      calendar_year, 
      after_packaging_sales - before_packaging_sales AS sales_variance, 
      ROUND(100 * 
        (after_packaging_sales - before_packaging_sales) 
        / before_packaging_sales,2) AS variance_percentage
    FROM before_after_changes_cte;

| calendar_year | sales_variance | variance_percentage |
| ------------- | -------------- | ------------------- |
| 2018          | 104256193      | 1.63                |
| 2019          | -20740294      | -0.30               |
| 2020          | -152325394     | -2.14               |
